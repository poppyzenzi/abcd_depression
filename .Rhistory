subject = "ID", ng = 5, data = df, mixture = ~ time))
summarytable(lcga1, lcga2, lcga3, lcga4, lcga5)
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga3$pprob$ID)
class = array(lcga3$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='Depression (CBCL score)') +
scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='Depression (CBCL score)') +
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='Depression (CBCL score)')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/abcd_poppy/data")
library(tidyverse)
# dataset = , variable chosen = using depression raw scores
df <- read.csv("abcd_ksads.csv", header = TRUE)  %>%
subset(select = c('src_subject_id','interview_date','interview_age','sex','eventname',
'KSADS.MDD.y','KSADS.MDD.p',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_current.y',
'KSADS.Dep_symptoms_sum_ever.p','KSADS.Dep_symptoms_sum_current.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y'))
colnames(df) <- c("ID","date","age", "sex", "time",'KSADS.MDD.y','KSADS.MDD.p',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_current.y',
'y','KSADS.Dep_symptoms   _sum_current.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y')
df$ID <- as.numeric(factor(df$ID,
levels=unique(df$ID)))
df$age <- as.numeric(df$age)/12  #converting to years
df["time"][df["time"] == "baseline_year_1_arm_1"] <- "0"
df["time"][df["time"] == "1_year_follow_up_y_arm_1"] <- "1"
df["time"][df["time"] == "2_year_follow_up_y_arm_1"] <- "2"
df["time"][df["time"] == "3_year_follow_up_y_arm_1"] <- "3"
transform(df, time = as.numeric(time), y = as.numeric(y))
i <- c(2,3)
df[ , i] <- apply(df[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
df
"LCGA with non-imputed data"
library(lcmm)
set.seed(2002)
lcga1 <- hlme(y ~ time, subject = "ID", ng = 1, data = df)
lcga2 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 2, data = df, mixture = ~ time))
lcga3 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 3, data = df, mixture = ~ time))
lcga4 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 4, data = df, mixture = ~ time))
lcga5 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 5, data = df, mixture = ~ time))
summarytable(lcga1, lcga2, lcga3, lcga4, lcga5)
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga4$pprob$ID)
class = array(lcga4$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_ever.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/abcd_poppy/data")
library(tidyverse)
# dataset = , variable chosen = using depression raw scores
df <- read.csv("abcd_ksads.csv", header = TRUE)  %>%
subset(select = c('src_subject_id','interview_date','interview_age','sex','eventname',
'KSADS.MDD.y','KSADS.MDD.p',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_current.y',
'KSADS.Dep_symptoms_sum_ever.p','KSADS.Dep_symptoms_sum_current.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y'))
colnames(df) <- c("ID","date","age", "sex", "time",'KSADS.MDD.y','KSADS.MDD.p',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_current.y',
'KSADS.Dep_symptoms_sum_ever.p','y',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y')
df$ID <- as.numeric(factor(df$ID,
levels=unique(df$ID)))
df$age <- as.numeric(df$age)/12  #converting to years
df["time"][df["time"] == "baseline_year_1_arm_1"] <- "0"
df["time"][df["time"] == "1_year_follow_up_y_arm_1"] <- "1"
df["time"][df["time"] == "2_year_follow_up_y_arm_1"] <- "2"
df["time"][df["time"] == "3_year_follow_up_y_arm_1"] <- "3"
transform(df, time = as.numeric(time), y = as.numeric(y))
i <- c(2,3)
df[ , i] <- apply(df[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
df
"LCGA with non-imputed data"
library(lcmm)
set.seed(2002)
lcga1 <- hlme(y ~ time, subject = "ID", ng = 1, data = df)
lcga2 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 2, data = df, mixture = ~ time))
lcga3 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 3, data = df, mixture = ~ time))
lcga4 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 4, data = df, mixture = ~ time))
lcga5 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 5, data = df, mixture = ~ time))
summarytable(lcga1, lcga2, lcga3, lcga4, lcga5)
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga4$pprob$ID)
class = array(lcga4$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
summary(labelled_data)
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_current.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_current.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_current.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Latent class', x="age (years)", y='DS (raw)') +
scale_color_brewer(palette="Dark2") + facet_wrap(~sex, scales = 'free')
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga4$pprob$ID)
class = array(lcga4$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_current.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
lcga4
summarytable(lcga1, lcga2, lcga3, lcga4, lcga5)
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga4$pprob$ID)
class = array(lcga4$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/abcd_poppy/data")
library(tidyverse)
# dataset = , variable chosen = using depression raw scores
df <- read.csv("abcd_ksads.csv", header = TRUE)  %>%
subset(select = c('src_subject_id','interview_date','interview_age','sex','eventname',
'KSADS.MDD.y','KSADS.MDD.p',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_current.y',
'KSADS.Dep_symptoms_sum_ever.p','KSADS.Dep_symptoms_sum_current.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y'))
colnames(df) <- c("ID","date","age", "sex", "time",'KSADS.MDD.y','KSADS.MDD.p',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_current.y',
'KSADS.Dep_symptoms_sum_ever.p','y',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y')
df$ID <- as.numeric(factor(df$ID,
levels=unique(df$ID)))
df$age <- as.numeric(df$age)/12  #converting to years
df["time"][df["time"] == "baseline_year_1_arm_1"] <- "0"
df["time"][df["time"] == "1_year_follow_up_y_arm_1"] <- "1"
df["time"][df["time"] == "2_year_follow_up_y_arm_1"] <- "2"
df["time"][df["time"] == "3_year_follow_up_y_arm_1"] <- "3"
transform(df, time = as.numeric(time), y = as.numeric(y))
i <- c(2,3)
df[ , i] <- apply(df[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
df
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga4$pprob$ID)
class = array(lcga4$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_current.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/abcd_poppy/data")
library(tidyverse)
# dataset = , variable chosen = using depression raw scores
df <- read.csv("abcd_ksads.csv", header = TRUE)  %>%
subset(select = c('src_subject_id','interview_date','interview_age','sex','eventname',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_ever.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y'))
colnames(df) <- c("ID","date","age", "sex", "time",
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_ever.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y')
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/abcd_poppy/data")
library(tidyverse)
# dataset = , variable chosen = using depression raw scores
df <- read.csv("abcd_ksads.csv", header = TRUE)  %>%
subset(select = c('src_subject_id','interview_date','interview_age','sex','eventname',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_ever.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y'))
colnames(df) <- c("ID","date","age", "sex", "time",
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_ever.p',
'y','KSADS.Depressive_symptoms_ever.y')
df$ID <- as.numeric(factor(df$ID,
levels=unique(df$ID)))
df$age <- as.numeric(df$age)/12  #converting to years
df["time"][df["time"] == "baseline_year_1_arm_1"] <- "0"
df["time"][df["time"] == "1_year_follow_up_y_arm_1"] <- "1"
df["time"][df["time"] == "2_year_follow_up_y_arm_1"] <- "2"
df["time"][df["time"] == "3_year_follow_up_y_arm_1"] <- "3"
transform(df, time = as.numeric(time), y = as.numeric(y))
i <- c(2,3)
df[ , i] <- apply(df[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
df
"LCGA with non-imputed data"
library(lcmm)
set.seed(2002)
lcga1 <- hlme(y ~ time, subject = "ID", ng = 1, data = df)
lcga2 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 2, data = df, mixture = ~ time))
lcga3 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 3, data = df, mixture = ~ time))
lcga4 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 4, data = df, mixture = ~ time))
lcga5 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 5, data = df, mixture = ~ time))
summarytable(lcga1, lcga2, lcga3, lcga4, lcga5)
lcga2
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga2$pprob$ID)
class = array(lcga2$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_current.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
df
labelled_data
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga2$pprob$ID)
class = array(lcga2$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
new_df
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
labelled_data
summary(labelled_data$class)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Dep_symptoms_sum_current.p')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(car)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(gridExtra)
library(haven)
library(labelled)
library(lme4)
# library(lmtest)
library(mosaic)
library(nlme)
library(purrr)
library(RNOmni)
library(stringr)
library(stringi)
library(tableone)
library(tibble)
library(tidyr)
library(mice)
library(foreign)
library(nnet)
library(reshape2)
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/abcd_poppy/data")
library(tidyverse)
# dataset = , variable chosen = using depression raw scores
df <- read.csv("abcd_ksads.csv", header = TRUE)  %>%
subset(select = c('src_subject_id','interview_date','interview_age','sex','eventname',
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_ever.p',
'KSADS.Depressive_symptoms_ever.p','KSADS.Depressive_symptoms_ever.y'))
colnames(df) <- c("ID","date","age", "sex", "time",
'KSADS.Dep_symptoms_sum_ever.y','KSADS.Dep_symptoms_sum_ever.p',
'KSADS.Depressive_symptoms_ever.p','y')
df$ID <- as.numeric(factor(df$ID,
levels=unique(df$ID)))
df$age <- as.numeric(df$age)/12  #converting to years
df["time"][df["time"] == "baseline_year_1_arm_1"] <- "0"
df["time"][df["time"] == "1_year_follow_up_y_arm_1"] <- "1"
df["time"][df["time"] == "2_year_follow_up_y_arm_1"] <- "2"
df["time"][df["time"] == "3_year_follow_up_y_arm_1"] <- "3"
transform(df, time = as.numeric(time), y = as.numeric(y))
i <- c(2,3)
df[ , i] <- apply(df[ , i], 2,            # Specify own function within apply
function(x) as.numeric(as.character(x)))
df
"LCGA with non-imputed data"
library(lcmm)
set.seed(2002)
lcga1 <- hlme(y ~ time, subject = "ID", ng = 1, data = df)
lcga2 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 2, data = df, mixture = ~ time))
lcga3 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 3, data = df, mixture = ~ time))
lcga4 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 4, data = df, mixture = ~ time))
lcga5 <- gridsearch(rep = 10, maxiter = 10, minit = lcga1, hlme(y ~ time,
subject = "ID", ng = 5, data = df, mixture = ~ time))
summarytable(lcga1, lcga2, lcga3, lcga4, lcga5)
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga2$pprob$ID)
class = array(lcga2$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga2$pprob$ID)
class = array(lcga2$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
labelled_data
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Latent class', x="age (years)", y='DS (raw)') +
scale_color_brewer(palette="Dark2") + facet_wrap(~sex, scales = 'free')
#plotting, then need to assign each individual data point (individual) to a class
#plot depression score by age and then label by class and fit line
"from above choose latent class model, look at pprob, highest = class assigned to
create new column with class assignment"
"lcga has column for class already"
ID = array(lcga2$pprob$ID)
class = array(lcga2$pprob$class)
new_df = data_frame(ID,class)
#when ID in df = ID in new_df, add new column value of class
#new df with imputed values and classes labelled by their ID from lcga anlaysis
#should be no missing values
data = df #or completed_df when doing imputed
labelled_data <- merge(data, new_df, by = "ID")
#summary(labelled_data)
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
labelled_data
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth()
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))
labelled_data
summary(labelled_data)
ggplot(labelled_data, aes(age, y))
ggplot(labelled_data, aes(x=age, y=y))
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth()
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_point()
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_abline()
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_curve()
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_line()
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth()
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_smooth() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_point() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
library(ggplot2)
ggplot(labelled_data, aes(x=age, y=y, color=as.factor(class)))  +
geom_line() + labs(color='Trajectory', x="Age (years)", y='KSADS.Depressive_symptoms_ever.y')
#scale_color_brewer(labels = c("persistent low", "increasing", "persistent high"), palette = "Dark2")
#a script for generating smfq scores from alspac data and running GMM
#set working directory to datastore
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/gmm")
# ----------------------------------------
# Read in stata format data (.dta file)
# This takes a wee while... and need to be connected to VPN and Datastore server.
data <- read_dta("/Volumes/cmvm/scs/groups/ALSPAC/data/B3421_Whalley_04Nov2021.dta")
#a script for generating smfq scores from alspac data and running GMM
#set working directory to datastore
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/gmm")
# ----------------------------------------
# Read in stata format data (.dta file)
# This takes a wee while... and need to be connected to VPN and Datastore server.
data <- read_dta("/Volumes/cmvm/scs/groups/ALSPAC/data/B3421_Whalley_04Nov2021.dta")
#a script for generating smfq scores from alspac data and running GMM
#set working directory to datastore
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/gmm")
# ----------------------------------------
# Read in stata format data (.dta file)
# This takes a wee while... and need to be connected to VPN and Datastore server.
data <- read_dta("/Volumes/cmvm/scs/groups/ALSPAC/data/B3421_Whalley_04Nov2021.dta")
#a script for generating smfq scores from alspac data and running GMM
#set working directory to datastore
setwd("/Users/poppygrimes/Library/CloudStorage/OneDrive-UniversityofEdinburgh/Edinburgh/gmm")
# ----------------------------------------
# Read in stata format data (.dta file)
# This takes a wee while... and need to be connected to VPN and Datastore server.
data <- read_dta("/Volumes/cmvm/scs/groups/ALSPAC/data/B3421_Whalley_04Nov2021.dta")
?PredictorMatrix
